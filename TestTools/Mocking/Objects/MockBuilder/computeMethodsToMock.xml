<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Procedure [] >
  <Procedure
      designNotes="Undefined"
      exceptionStrategy="0"
      isPending="false"
      isPrivate="false"
      isTPL="false"
      language="EcmaScript"
      name="computeMethodsToMock"
      nested="false"
      version="4.1.0">
    <ReferenceParameters />
    <ProcedureLocals>
      <ObjectField
          designNotes=""
          name="result">
        <TypeDefinitionReference
            name="GTList"
            nested="false" />
      </ObjectField>
      <ObjectField
          name="methodsToRemove">
        <TypeDefinitionReference
            name="GTList"
            nested="false" />
      </ObjectField>
    </ProcedureLocals>
    <StringField
        designNotes=""
        length="0"
        name="propertyName" />
    <StringField
        designNotes=""
        length="0"
        name="defaultValue" />
    <ResultType>
      <ObjectField
          designNotes=""
          name="">
        <TypeDefinitionReference
            name="GTList"
            nested="false" />
      </ObjectField>
    </ResultType>
    <Verbatim
        fieldName="text">
<![CDATA[result = GTReflection.getType(object.getFullyQualifiedName()).getInstanceProcedures();

if(!mockedMethods.isEmpty()){
    methodsToRemove = new GTList();
    for (var i =0; i< result.size(); i++){
        if(!mockedMethods.contains(result.get(i).getName()))
            methodsToRemove.add(result.get(i));
    }
    result.removeAll(methodsToRemove);
}
return result;
]]>
    </Verbatim>
  </Procedure>
